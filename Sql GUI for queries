{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'mysql'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1-8166d48c0914>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtkinter\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mtk\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mmysql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnector\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtkinter\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0msubmission\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'mysql'"
     ]
    }
   ],
   "source": [
    "import tkinter as tk\n",
    "import mysql.connector \n",
    "from tkinter import *\n",
    "  \n",
    "def submission():\n",
    "     \n",
    "    user = Username.get()\n",
    "    passw = password.get()\n",
    "\n",
    "    logintodb(user, passw)\n",
    "  \n",
    " \n",
    "def logintodb(user, passw):\n",
    "\n",
    "    if passw:\n",
    "        d = mysql.connector.connect(host =\"localhost\",\n",
    "                                     user = user,\n",
    "                                     password = passw,\n",
    "                                     db =\"earthquake\")\n",
    "        c = d.cursor()\n",
    "         \n",
    "    # If no password is enetered by the\n",
    "    # user\n",
    "    else:\n",
    "        d = mysql.connector.connect(host =\"localhost\",\n",
    "                                     user = user,\n",
    "                                     db =\"earthquake\")\n",
    "        c = d.cursor()\n",
    "\n",
    "def userinput():\n",
    "    user = Username.get()\n",
    "    passw = password.get()\n",
    "    d = mysql.connector.connect(host =\"localhost\",\n",
    "                                     user = user,\n",
    "                                 password = passw,\n",
    "                                     db =\"earthquake\")\n",
    "    c = d.cursor()\n",
    "    c.execute(save.get())\n",
    "    i=0 \n",
    "    for employee in c: \n",
    "        for j in range(len(employee)):\n",
    "            ep = Entry(root, width=10, fg='black') \n",
    "            ep.grid(row=i, column=j) \n",
    "            ep.insert(END, employee[j])    \n",
    "        i=i+1 \n",
    "\n",
    "def cond():\n",
    "    user = Username.get()\n",
    "    passw = password.get()\n",
    "    d = mysql.connector.connect(host =\"localhost\",\n",
    "                                     user = user,\n",
    "                                 password = passw,\n",
    "                                     db =\"earthquake\")\n",
    "    c = d.cursor()\n",
    "    c.execute(\"SELECT * from eq1\")\n",
    "    i=1 \n",
    "    for earth in c: \n",
    "        for j in range(len(earth)):\n",
    "            ea = Entry(root, width=10, fg='black') \n",
    "            ea.grid(row=i, column=j) \n",
    "            ea.insert(END, earth[j])\n",
    "            ea=Label(root,width=10,text='ward_id',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=0)\n",
    "            ea=Label(root,width=10,text='vdcmun_id',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=1)\n",
    "            ea=Label(root,width=10,text='vdcmun_name',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=2)\n",
    "            ea=Label(root,width=10,text='discrit_id',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=3)  \n",
    "            ea=Label(root,width=10,text='district_name',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=4) \n",
    "        i=i+1\n",
    "def cond_1():\n",
    "    user = Username.get()\n",
    "    passw = password.get()\n",
    "    d = mysql.connector.connect(host =\"localhost\",\n",
    "                                     user = user,\n",
    "                                 password = passw,\n",
    "                                     db =\"earthquake\")\n",
    "    c= d.cursor()\n",
    "    c.execute(\"SELECT eq1.ward_id, eq2.count_families,eq1.district_name from eq1 inner join eq2 where eq2.count_families= 1 order by eq1.ward_id=eq2.ward_id\")\n",
    "    i=0 \n",
    "    for earth in c: \n",
    "        for j in range(len(earth)):\n",
    "            ea = Entry(root, width=10, fg='black') \n",
    "            ea.grid(row=i, column=j) \n",
    "            ea.insert(END, earth[j])\n",
    "            ea=Label(root,width=10,text='ward_id',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=0)\n",
    "            ea=Label(root,width=10,text='count_families',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=1)    \n",
    "            ea=Label(root,width=10,text='district_name',borderwidth=1, relief='ridge',anchor='w',bg='yellow')\n",
    "            ea.grid(row=0,column=2) \n",
    "        i=i+1 \n",
    "root = tk.Tk()\n",
    "root.geometry(\"800x800\")\n",
    "root.title(\"pranay's database system\") \n",
    "\n",
    "# Definging the first row\n",
    "lowM = tk.Label(root, text =\"Username -\", )\n",
    "lowM.place(x = 50, y = 20)\n",
    " \n",
    "Username = tk.Entry(root, width = 35)\n",
    "Username.place(x = 150, y = 20, width = 100)\n",
    "  \n",
    "highM = tk.Label(root, text =\"Password -\")\n",
    "highM.place(x = 50, y = 50)\n",
    " \n",
    "password = tk.Entry(root, width = 35)\n",
    "password.place(x = 150, y = 50, width = 100)\n",
    "\n",
    "submit = tk.Button(root, text =\"Login\", \n",
    "                      bg ='white', command = submission)\n",
    "submit.place(x = 150, y = 135, width = 155)\n",
    "\n",
    "\n",
    "condition_1 = tk.Button(root, text =\"Display all records from eq1\", \n",
    "                      bg ='blue', command = condition)\n",
    "condition_1.place(x = 150, y = 200, width = 255)\n",
    "\n",
    "\n",
    "condition_2 = tk.Button(root, text =\"Display records using joins\", \n",
    "                      bg ='blue', command = cond_1)\n",
    "condition_2.place(x = 150, y = 250, width = 255)\n",
    "\n",
    "query = tk.Label(root, text =\"Enter the query\")\n",
    "query.place(x = 150, y = 300)\n",
    " \n",
    "save = tk.Entry(root, width = 35)\n",
    "save.place(x = 250, y = 300, width = 250)\n",
    "\n",
    "condition_M= tk.Button(root, text =\"input\", \n",
    "                      bg ='blue', command = userinput)\n",
    "condition_M.place(x = 150, y = 400, width = 255)\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'mysql'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-2-6c72e9b87e69>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtkinter\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mtk\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mmysql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconnector\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtkinter\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'mysql'"
     ]
    }
   ],
   "source": [
    "import tkinter as tk\n",
    "import mysql.connector \n",
    "from tkinter import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
